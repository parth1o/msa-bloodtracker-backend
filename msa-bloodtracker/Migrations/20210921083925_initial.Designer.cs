// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using msa_bloodtracker.Data;

namespace msa_bloodtracker.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210921083925_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("msa_bloodtracker.Model.Bloodtest", b =>
                {
                    b.Property<int>("BloodtestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Creatinine")
                        .HasColumnType("int");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Hb")
                        .HasColumnType("int");

                    b.Property<float>("Mg")
                        .HasColumnType("real");

                    b.Property<float>("Neuts")
                        .HasColumnType("real");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int>("Platelets")
                        .HasColumnType("int");

                    b.Property<float>("WBC")
                        .HasColumnType("real");

                    b.HasKey("BloodtestId");

                    b.HasIndex("PatientId");

                    b.ToTable("Bloodtests");
                });

            modelBuilder.Entity("msa_bloodtracker.Model.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("msa_bloodtracker.Model.Bloodtest", b =>
                {
                    b.HasOne("msa_bloodtracker.Model.Patient", "Patient")
                        .WithMany("Bloodtests")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("msa_bloodtracker.Model.Patient", b =>
                {
                    b.Navigation("Bloodtests");
                });
#pragma warning restore 612, 618
        }
    }
}
